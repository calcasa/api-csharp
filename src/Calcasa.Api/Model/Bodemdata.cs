// <auto-generated>
/*
 * Copyright 2025 Calcasa B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Calcasa Public API
 *
 * The Calcasa API is used to connect to Calcasa provided services. For more information, please visit [Documentation](https://docs.calcasa.nl) or [GitHub](https://github.com/calcasa/api).
 *
 * The version of the OpenAPI document: 1.4.0-rc2
 * Contact: info@calcasa.nl
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;
using Calcasa.Api.Client;

namespace Calcasa.Api.Model
{
    /// <summary>
    /// Bodemdata
    /// </summary>
    public partial class Bodemdata
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Bodemdata" /> class.
        /// </summary>
        /// <param name="status">status</param>
        /// <param name="datumLaatsteOnderzoek">De datum van het laatste bodemonderzoek.</param>
        /// <param name="url">De url met informatie over het bodemonderzoek.</param>
        [JsonConstructor]
        public Bodemdata(Option<BodemStatusType?> status = default, Option<DateOnly?> datumLaatsteOnderzoek = default, Option<string?> url = default)
        {
            StatusOption = status;
            DatumLaatsteOnderzoekOption = datumLaatsteOnderzoek;
            UrlOption = url;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Status
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<BodemStatusType?> StatusOption { get; private set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [JsonPropertyName("status")]
        public BodemStatusType? Status { get { return this.StatusOption; } set { this.StatusOption = new(value); } }

        /// <summary>
        /// Used to track the state of DatumLaatsteOnderzoek
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<DateOnly?> DatumLaatsteOnderzoekOption { get; private set; }

        /// <summary>
        /// De datum van het laatste bodemonderzoek.
        /// </summary>
        /// <value>De datum van het laatste bodemonderzoek.</value>
        /* <example>Wed Apr 28 00:00:00 UTC 2021</example> */
        [JsonPropertyName("datumLaatsteOnderzoek")]
        public DateOnly? DatumLaatsteOnderzoek { get { return this.DatumLaatsteOnderzoekOption; } set { this.DatumLaatsteOnderzoekOption = new(value); } }

        /// <summary>
        /// Used to track the state of Url
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> UrlOption { get; private set; }

        /// <summary>
        /// De url met informatie over het bodemonderzoek.
        /// </summary>
        /// <value>De url met informatie over het bodemonderzoek.</value>
        [JsonPropertyName("url")]
        public string? Url { get { return this.UrlOption; } set { this.UrlOption = new(value); } }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public Dictionary<string, JsonElement> AdditionalProperties { get; } = new Dictionary<string, JsonElement>();

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Bodemdata {\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  DatumLaatsteOnderzoek: ").Append(DatumLaatsteOnderzoek).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="Bodemdata" />
    /// </summary>
    public class BodemdataJsonConverter : JsonConverter<Bodemdata>
    {
        /// <summary>
        /// The format to use to serialize DatumLaatsteOnderzoek
        /// </summary>
        public static string DatumLaatsteOnderzoekFormat { get; set; } = "yyyy'-'MM'-'dd";

        /// <summary>
        /// Deserializes json to <see cref="Bodemdata" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override Bodemdata Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<BodemStatusType?> status = default;
            Option<DateOnly?> datumLaatsteOnderzoek = default;
            Option<string?> url = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "status":
                            string? statusRawValue = utf8JsonReader.GetString();
                            if (statusRawValue != null)
                                status = new Option<BodemStatusType?>(BodemStatusTypeValueConverter.FromStringOrDefault(statusRawValue));
                            break;
                        case "datumLaatsteOnderzoek":
                            datumLaatsteOnderzoek = new Option<DateOnly?>(JsonSerializer.Deserialize<DateOnly?>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "url":
                            url = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (status.IsSet && status.Value == null)
                throw new ArgumentNullException(nameof(status), "Property is not nullable for class Bodemdata.");

            return new Bodemdata(status, datumLaatsteOnderzoek, url);
        }

        /// <summary>
        /// Serializes a <see cref="Bodemdata" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="bodemdata"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, Bodemdata bodemdata, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, bodemdata, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="Bodemdata" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="bodemdata"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, Bodemdata bodemdata, JsonSerializerOptions jsonSerializerOptions)
        {
            if (bodemdata.StatusOption.IsSet)
            {
                var statusRawValue = BodemStatusTypeValueConverter.ToJsonValue(bodemdata.Status!.Value);
                writer.WriteString("status", statusRawValue);
            }
            if (bodemdata.DatumLaatsteOnderzoekOption.IsSet)
                if (bodemdata.DatumLaatsteOnderzoekOption.Value != null)
                    writer.WriteString("datumLaatsteOnderzoek", bodemdata.DatumLaatsteOnderzoekOption.Value!.Value.ToString(DatumLaatsteOnderzoekFormat));
                else
                    writer.WriteNull("datumLaatsteOnderzoek");

            if (bodemdata.UrlOption.IsSet)
                if (bodemdata.UrlOption.Value != null)
                    writer.WriteString("url", bodemdata.Url);
                else
                    writer.WriteNull("url");
        }
    }

    /// <summary>
    /// The BodemdataSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(Bodemdata))]
    public partial class BodemdataSerializationContext : JsonSerializerContext { }
}
