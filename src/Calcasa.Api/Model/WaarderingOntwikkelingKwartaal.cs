// <auto-generated>
/*
 * Copyright 2025 Calcasa B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Calcasa Public API
 *
 * The Calcasa API is used to connect to Calcasa provided services. For more information, please visit [Documentation](https://docs.calcasa.nl) or [GitHub](https://github.com/calcasa/api).
 *
 * The version of the OpenAPI document: 1.4.0-rc2
 * Contact: info@calcasa.nl
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;
using Calcasa.Api.Client;

namespace Calcasa.Api.Model
{
    /// <summary>
    /// WaarderingOntwikkelingKwartaal
    /// </summary>
    public partial class WaarderingOntwikkelingKwartaal
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WaarderingOntwikkelingKwartaal" /> class.
        /// </summary>
        /// <param name="kwartaal">kwartaal</param>
        /// <param name="waarde">In hele euros.</param>
        [JsonConstructor]
        public WaarderingOntwikkelingKwartaal(Option<Kwartaal?> kwartaal = default, Option<int?> waarde = default)
        {
            KwartaalOption = kwartaal;
            WaardeOption = waarde;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Kwartaal
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Kwartaal?> KwartaalOption { get; private set; }

        /// <summary>
        /// Gets or Sets Kwartaal
        /// </summary>
        [JsonPropertyName("kwartaal")]
        public Kwartaal? Kwartaal { get { return this.KwartaalOption; } set { this.KwartaalOption = new(value); } }

        /// <summary>
        /// Used to track the state of Waarde
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> WaardeOption { get; private set; }

        /// <summary>
        /// In hele euros.
        /// </summary>
        /// <value>In hele euros.</value>
        [JsonPropertyName("waarde")]
        public int? Waarde { get { return this.WaardeOption; } set { this.WaardeOption = new(value); } }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public Dictionary<string, JsonElement> AdditionalProperties { get; } = new Dictionary<string, JsonElement>();

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WaarderingOntwikkelingKwartaal {\n");
            sb.Append("  Kwartaal: ").Append(Kwartaal).Append("\n");
            sb.Append("  Waarde: ").Append(Waarde).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WaarderingOntwikkelingKwartaal" />
    /// </summary>
    public class WaarderingOntwikkelingKwartaalJsonConverter : JsonConverter<WaarderingOntwikkelingKwartaal>
    {
        /// <summary>
        /// Deserializes json to <see cref="WaarderingOntwikkelingKwartaal" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override WaarderingOntwikkelingKwartaal Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<Kwartaal?> kwartaal = default;
            Option<int?> waarde = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "kwartaal":
                            kwartaal = new Option<Kwartaal?>(JsonSerializer.Deserialize<Kwartaal>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "waarde":
                            waarde = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (kwartaal.IsSet && kwartaal.Value == null)
                throw new ArgumentNullException(nameof(kwartaal), "Property is not nullable for class WaarderingOntwikkelingKwartaal.");

            if (waarde.IsSet && waarde.Value == null)
                throw new ArgumentNullException(nameof(waarde), "Property is not nullable for class WaarderingOntwikkelingKwartaal.");

            return new WaarderingOntwikkelingKwartaal(kwartaal, waarde);
        }

        /// <summary>
        /// Serializes a <see cref="WaarderingOntwikkelingKwartaal" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="waarderingOntwikkelingKwartaal"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, WaarderingOntwikkelingKwartaal waarderingOntwikkelingKwartaal, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, waarderingOntwikkelingKwartaal, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="WaarderingOntwikkelingKwartaal" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="waarderingOntwikkelingKwartaal"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, WaarderingOntwikkelingKwartaal waarderingOntwikkelingKwartaal, JsonSerializerOptions jsonSerializerOptions)
        {
            if (waarderingOntwikkelingKwartaal.KwartaalOption.IsSet && waarderingOntwikkelingKwartaal.Kwartaal == null)
                throw new ArgumentNullException(nameof(waarderingOntwikkelingKwartaal.Kwartaal), "Property is required for class WaarderingOntwikkelingKwartaal.");

            if (waarderingOntwikkelingKwartaal.KwartaalOption.IsSet)
            {
                writer.WritePropertyName("kwartaal");
                JsonSerializer.Serialize(writer, waarderingOntwikkelingKwartaal.Kwartaal, jsonSerializerOptions);
            }
            if (waarderingOntwikkelingKwartaal.WaardeOption.IsSet)
                writer.WriteNumber("waarde", waarderingOntwikkelingKwartaal.WaardeOption.Value!.Value);
        }
    }

    /// <summary>
    /// The WaarderingOntwikkelingKwartaalSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(WaarderingOntwikkelingKwartaal))]
    public partial class WaarderingOntwikkelingKwartaalSerializationContext : JsonSerializerContext { }
}
