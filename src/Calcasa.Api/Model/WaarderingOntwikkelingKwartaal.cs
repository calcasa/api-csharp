/*
 * Copyright 2021 Calcasa B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Calcasa Public API v1
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: info@calcasa.nl
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Calcasa.Api.Client.FileParameter;
using OpenAPIDateConverter = Calcasa.Api.Client.OpenAPIDateConverter;

namespace Calcasa.Api.Model
{
    /// <summary>
    /// WaarderingOntwikkelingKwartaal
    /// </summary>
    [DataContract(Name = "WaarderingOntwikkelingKwartaal")]
    public partial class WaarderingOntwikkelingKwartaal : IEquatable<WaarderingOntwikkelingKwartaal>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WaarderingOntwikkelingKwartaal" /> class.
        /// </summary>
        /// <param name="kwartaal">kwartaal.</param>
        /// <param name="waarde">In hele euros..</param>
        public WaarderingOntwikkelingKwartaal(Kwartaal kwartaal = default(Kwartaal), int waarde = default(int))
        {
            this.Kwartaal = kwartaal;
            this.Waarde = waarde;
        }

        /// <summary>
        /// Gets or Sets Kwartaal
        /// </summary>
        [DataMember(Name = "kwartaal", EmitDefaultValue = true)]
        public Kwartaal Kwartaal { get; set; }

        /// <summary>
        /// In hele euros.
        /// </summary>
        /// <value>In hele euros.</value>
        [DataMember(Name = "waarde", EmitDefaultValue = false)]
        public int Waarde { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WaarderingOntwikkelingKwartaal {\n");
            sb.Append("  Kwartaal: ").Append(Kwartaal).Append("\n");
            sb.Append("  Waarde: ").Append(Waarde).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WaarderingOntwikkelingKwartaal);
        }

        /// <summary>
        /// Returns true if WaarderingOntwikkelingKwartaal instances are equal
        /// </summary>
        /// <param name="input">Instance of WaarderingOntwikkelingKwartaal to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WaarderingOntwikkelingKwartaal input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Kwartaal == input.Kwartaal ||
                    (this.Kwartaal != null &&
                    this.Kwartaal.Equals(input.Kwartaal))
                ) && 
                (
                    this.Waarde == input.Waarde ||
                    this.Waarde.Equals(input.Waarde)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Kwartaal != null)
                {
                    hashCode = (hashCode * 59) + this.Kwartaal.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Waarde.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
