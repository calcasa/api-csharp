// <auto-generated>
/*
 * Copyright 2025 Calcasa B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Calcasa Public API
 *
 * The Calcasa API is used to connect to Calcasa provided services. For more information, please visit [Documentation](https://docs.calcasa.nl) or [GitHub](https://github.com/calcasa/api).
 *
 * The version of the OpenAPI document: 1.4.0-rc2
 * Contact: info@calcasa.nl
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;
using Calcasa.Api.Client;

namespace Calcasa.Api.Model
{
    /// <summary>
    /// Gebiedsdata
    /// </summary>
    public partial class Gebiedsdata
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Gebiedsdata" /> class.
        /// </summary>
        /// <param name="naam">naam</param>
        /// <param name="gemiddeldePrijsEengezinswoningen">In hele euros.</param>
        /// <param name="gemiddeldePrijsMeergezinswoningen">In hele euros.</param>
        /// <param name="gemiddeldeVierkantemeterPrijsEengezinswoningen">In hele euros per vierkante meter.</param>
        /// <param name="gemiddeldeVierkantemeterPrijsMeergezinswoningen">In hele euros per vierkante meter.</param>
        /// <param name="prijsveranderingAfgelopenJaar">In hele procenten.</param>
        /// <param name="prijsveranderingAfgelopen3Jaar">In hele procenten.</param>
        /// <param name="prijsveranderingAfgelopen5Jaar">In hele procenten.</param>
        /// <param name="prijsveranderingAfgelopen10Jaar">In hele procenten.</param>
        [JsonConstructor]
        public Gebiedsdata(Option<string?> naam = default, Option<int?> gemiddeldePrijsEengezinswoningen = default, Option<int?> gemiddeldePrijsMeergezinswoningen = default, Option<int?> gemiddeldeVierkantemeterPrijsEengezinswoningen = default, Option<int?> gemiddeldeVierkantemeterPrijsMeergezinswoningen = default, Option<int?> prijsveranderingAfgelopenJaar = default, Option<int?> prijsveranderingAfgelopen3Jaar = default, Option<int?> prijsveranderingAfgelopen5Jaar = default, Option<int?> prijsveranderingAfgelopen10Jaar = default)
        {
            NaamOption = naam;
            GemiddeldePrijsEengezinswoningenOption = gemiddeldePrijsEengezinswoningen;
            GemiddeldePrijsMeergezinswoningenOption = gemiddeldePrijsMeergezinswoningen;
            GemiddeldeVierkantemeterPrijsEengezinswoningenOption = gemiddeldeVierkantemeterPrijsEengezinswoningen;
            GemiddeldeVierkantemeterPrijsMeergezinswoningenOption = gemiddeldeVierkantemeterPrijsMeergezinswoningen;
            PrijsveranderingAfgelopenJaarOption = prijsveranderingAfgelopenJaar;
            PrijsveranderingAfgelopen3JaarOption = prijsveranderingAfgelopen3Jaar;
            PrijsveranderingAfgelopen5JaarOption = prijsveranderingAfgelopen5Jaar;
            PrijsveranderingAfgelopen10JaarOption = prijsveranderingAfgelopen10Jaar;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Naam
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> NaamOption { get; private set; }

        /// <summary>
        /// Gets or Sets Naam
        /// </summary>
        [JsonPropertyName("naam")]
        public string? Naam { get { return this.NaamOption; } set { this.NaamOption = new(value); } }

        /// <summary>
        /// Used to track the state of GemiddeldePrijsEengezinswoningen
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> GemiddeldePrijsEengezinswoningenOption { get; private set; }

        /// <summary>
        /// In hele euros.
        /// </summary>
        /// <value>In hele euros.</value>
        [JsonPropertyName("gemiddeldePrijsEengezinswoningen")]
        public int? GemiddeldePrijsEengezinswoningen { get { return this.GemiddeldePrijsEengezinswoningenOption; } set { this.GemiddeldePrijsEengezinswoningenOption = new(value); } }

        /// <summary>
        /// Used to track the state of GemiddeldePrijsMeergezinswoningen
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> GemiddeldePrijsMeergezinswoningenOption { get; private set; }

        /// <summary>
        /// In hele euros.
        /// </summary>
        /// <value>In hele euros.</value>
        [JsonPropertyName("gemiddeldePrijsMeergezinswoningen")]
        public int? GemiddeldePrijsMeergezinswoningen { get { return this.GemiddeldePrijsMeergezinswoningenOption; } set { this.GemiddeldePrijsMeergezinswoningenOption = new(value); } }

        /// <summary>
        /// Used to track the state of GemiddeldeVierkantemeterPrijsEengezinswoningen
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> GemiddeldeVierkantemeterPrijsEengezinswoningenOption { get; private set; }

        /// <summary>
        /// In hele euros per vierkante meter.
        /// </summary>
        /// <value>In hele euros per vierkante meter.</value>
        [JsonPropertyName("gemiddeldeVierkantemeterPrijsEengezinswoningen")]
        public int? GemiddeldeVierkantemeterPrijsEengezinswoningen { get { return this.GemiddeldeVierkantemeterPrijsEengezinswoningenOption; } set { this.GemiddeldeVierkantemeterPrijsEengezinswoningenOption = new(value); } }

        /// <summary>
        /// Used to track the state of GemiddeldeVierkantemeterPrijsMeergezinswoningen
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> GemiddeldeVierkantemeterPrijsMeergezinswoningenOption { get; private set; }

        /// <summary>
        /// In hele euros per vierkante meter.
        /// </summary>
        /// <value>In hele euros per vierkante meter.</value>
        [JsonPropertyName("gemiddeldeVierkantemeterPrijsMeergezinswoningen")]
        public int? GemiddeldeVierkantemeterPrijsMeergezinswoningen { get { return this.GemiddeldeVierkantemeterPrijsMeergezinswoningenOption; } set { this.GemiddeldeVierkantemeterPrijsMeergezinswoningenOption = new(value); } }

        /// <summary>
        /// Used to track the state of PrijsveranderingAfgelopenJaar
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> PrijsveranderingAfgelopenJaarOption { get; private set; }

        /// <summary>
        /// In hele procenten.
        /// </summary>
        /// <value>In hele procenten.</value>
        [JsonPropertyName("prijsveranderingAfgelopenJaar")]
        public int? PrijsveranderingAfgelopenJaar { get { return this.PrijsveranderingAfgelopenJaarOption; } set { this.PrijsveranderingAfgelopenJaarOption = new(value); } }

        /// <summary>
        /// Used to track the state of PrijsveranderingAfgelopen3Jaar
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> PrijsveranderingAfgelopen3JaarOption { get; private set; }

        /// <summary>
        /// In hele procenten.
        /// </summary>
        /// <value>In hele procenten.</value>
        [JsonPropertyName("prijsveranderingAfgelopen3Jaar")]
        public int? PrijsveranderingAfgelopen3Jaar { get { return this.PrijsveranderingAfgelopen3JaarOption; } set { this.PrijsveranderingAfgelopen3JaarOption = new(value); } }

        /// <summary>
        /// Used to track the state of PrijsveranderingAfgelopen5Jaar
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> PrijsveranderingAfgelopen5JaarOption { get; private set; }

        /// <summary>
        /// In hele procenten.
        /// </summary>
        /// <value>In hele procenten.</value>
        [JsonPropertyName("prijsveranderingAfgelopen5Jaar")]
        public int? PrijsveranderingAfgelopen5Jaar { get { return this.PrijsveranderingAfgelopen5JaarOption; } set { this.PrijsveranderingAfgelopen5JaarOption = new(value); } }

        /// <summary>
        /// Used to track the state of PrijsveranderingAfgelopen10Jaar
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> PrijsveranderingAfgelopen10JaarOption { get; private set; }

        /// <summary>
        /// In hele procenten.
        /// </summary>
        /// <value>In hele procenten.</value>
        [JsonPropertyName("prijsveranderingAfgelopen10Jaar")]
        public int? PrijsveranderingAfgelopen10Jaar { get { return this.PrijsveranderingAfgelopen10JaarOption; } set { this.PrijsveranderingAfgelopen10JaarOption = new(value); } }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public Dictionary<string, JsonElement> AdditionalProperties { get; } = new Dictionary<string, JsonElement>();

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Gebiedsdata {\n");
            sb.Append("  Naam: ").Append(Naam).Append("\n");
            sb.Append("  GemiddeldePrijsEengezinswoningen: ").Append(GemiddeldePrijsEengezinswoningen).Append("\n");
            sb.Append("  GemiddeldePrijsMeergezinswoningen: ").Append(GemiddeldePrijsMeergezinswoningen).Append("\n");
            sb.Append("  GemiddeldeVierkantemeterPrijsEengezinswoningen: ").Append(GemiddeldeVierkantemeterPrijsEengezinswoningen).Append("\n");
            sb.Append("  GemiddeldeVierkantemeterPrijsMeergezinswoningen: ").Append(GemiddeldeVierkantemeterPrijsMeergezinswoningen).Append("\n");
            sb.Append("  PrijsveranderingAfgelopenJaar: ").Append(PrijsveranderingAfgelopenJaar).Append("\n");
            sb.Append("  PrijsveranderingAfgelopen3Jaar: ").Append(PrijsveranderingAfgelopen3Jaar).Append("\n");
            sb.Append("  PrijsveranderingAfgelopen5Jaar: ").Append(PrijsveranderingAfgelopen5Jaar).Append("\n");
            sb.Append("  PrijsveranderingAfgelopen10Jaar: ").Append(PrijsveranderingAfgelopen10Jaar).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="Gebiedsdata" />
    /// </summary>
    public class GebiedsdataJsonConverter : JsonConverter<Gebiedsdata>
    {
        /// <summary>
        /// Deserializes json to <see cref="Gebiedsdata" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override Gebiedsdata Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> naam = default;
            Option<int?> gemiddeldePrijsEengezinswoningen = default;
            Option<int?> gemiddeldePrijsMeergezinswoningen = default;
            Option<int?> gemiddeldeVierkantemeterPrijsEengezinswoningen = default;
            Option<int?> gemiddeldeVierkantemeterPrijsMeergezinswoningen = default;
            Option<int?> prijsveranderingAfgelopenJaar = default;
            Option<int?> prijsveranderingAfgelopen3Jaar = default;
            Option<int?> prijsveranderingAfgelopen5Jaar = default;
            Option<int?> prijsveranderingAfgelopen10Jaar = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "naam":
                            naam = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "gemiddeldePrijsEengezinswoningen":
                            gemiddeldePrijsEengezinswoningen = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "gemiddeldePrijsMeergezinswoningen":
                            gemiddeldePrijsMeergezinswoningen = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "gemiddeldeVierkantemeterPrijsEengezinswoningen":
                            gemiddeldeVierkantemeterPrijsEengezinswoningen = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "gemiddeldeVierkantemeterPrijsMeergezinswoningen":
                            gemiddeldeVierkantemeterPrijsMeergezinswoningen = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "prijsveranderingAfgelopenJaar":
                            prijsveranderingAfgelopenJaar = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "prijsveranderingAfgelopen3Jaar":
                            prijsveranderingAfgelopen3Jaar = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "prijsveranderingAfgelopen5Jaar":
                            prijsveranderingAfgelopen5Jaar = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "prijsveranderingAfgelopen10Jaar":
                            prijsveranderingAfgelopen10Jaar = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (naam.IsSet && naam.Value == null)
                throw new ArgumentNullException(nameof(naam), "Property is not nullable for class Gebiedsdata.");

            return new Gebiedsdata(naam, gemiddeldePrijsEengezinswoningen, gemiddeldePrijsMeergezinswoningen, gemiddeldeVierkantemeterPrijsEengezinswoningen, gemiddeldeVierkantemeterPrijsMeergezinswoningen, prijsveranderingAfgelopenJaar, prijsveranderingAfgelopen3Jaar, prijsveranderingAfgelopen5Jaar, prijsveranderingAfgelopen10Jaar);
        }

        /// <summary>
        /// Serializes a <see cref="Gebiedsdata" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="gebiedsdata"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, Gebiedsdata gebiedsdata, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, gebiedsdata, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="Gebiedsdata" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="gebiedsdata"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, Gebiedsdata gebiedsdata, JsonSerializerOptions jsonSerializerOptions)
        {
            if (gebiedsdata.NaamOption.IsSet && gebiedsdata.Naam == null)
                throw new ArgumentNullException(nameof(gebiedsdata.Naam), "Property is required for class Gebiedsdata.");

            if (gebiedsdata.NaamOption.IsSet)
                writer.WriteString("naam", gebiedsdata.Naam);

            if (gebiedsdata.GemiddeldePrijsEengezinswoningenOption.IsSet)
                if (gebiedsdata.GemiddeldePrijsEengezinswoningenOption.Value != null)
                    writer.WriteNumber("gemiddeldePrijsEengezinswoningen", gebiedsdata.GemiddeldePrijsEengezinswoningenOption.Value!.Value);
                else
                    writer.WriteNull("gemiddeldePrijsEengezinswoningen");

            if (gebiedsdata.GemiddeldePrijsMeergezinswoningenOption.IsSet)
                if (gebiedsdata.GemiddeldePrijsMeergezinswoningenOption.Value != null)
                    writer.WriteNumber("gemiddeldePrijsMeergezinswoningen", gebiedsdata.GemiddeldePrijsMeergezinswoningenOption.Value!.Value);
                else
                    writer.WriteNull("gemiddeldePrijsMeergezinswoningen");

            if (gebiedsdata.GemiddeldeVierkantemeterPrijsEengezinswoningenOption.IsSet)
                if (gebiedsdata.GemiddeldeVierkantemeterPrijsEengezinswoningenOption.Value != null)
                    writer.WriteNumber("gemiddeldeVierkantemeterPrijsEengezinswoningen", gebiedsdata.GemiddeldeVierkantemeterPrijsEengezinswoningenOption.Value!.Value);
                else
                    writer.WriteNull("gemiddeldeVierkantemeterPrijsEengezinswoningen");

            if (gebiedsdata.GemiddeldeVierkantemeterPrijsMeergezinswoningenOption.IsSet)
                if (gebiedsdata.GemiddeldeVierkantemeterPrijsMeergezinswoningenOption.Value != null)
                    writer.WriteNumber("gemiddeldeVierkantemeterPrijsMeergezinswoningen", gebiedsdata.GemiddeldeVierkantemeterPrijsMeergezinswoningenOption.Value!.Value);
                else
                    writer.WriteNull("gemiddeldeVierkantemeterPrijsMeergezinswoningen");

            if (gebiedsdata.PrijsveranderingAfgelopenJaarOption.IsSet)
                if (gebiedsdata.PrijsveranderingAfgelopenJaarOption.Value != null)
                    writer.WriteNumber("prijsveranderingAfgelopenJaar", gebiedsdata.PrijsveranderingAfgelopenJaarOption.Value!.Value);
                else
                    writer.WriteNull("prijsveranderingAfgelopenJaar");

            if (gebiedsdata.PrijsveranderingAfgelopen3JaarOption.IsSet)
                if (gebiedsdata.PrijsveranderingAfgelopen3JaarOption.Value != null)
                    writer.WriteNumber("prijsveranderingAfgelopen3Jaar", gebiedsdata.PrijsveranderingAfgelopen3JaarOption.Value!.Value);
                else
                    writer.WriteNull("prijsveranderingAfgelopen3Jaar");

            if (gebiedsdata.PrijsveranderingAfgelopen5JaarOption.IsSet)
                if (gebiedsdata.PrijsveranderingAfgelopen5JaarOption.Value != null)
                    writer.WriteNumber("prijsveranderingAfgelopen5Jaar", gebiedsdata.PrijsveranderingAfgelopen5JaarOption.Value!.Value);
                else
                    writer.WriteNull("prijsveranderingAfgelopen5Jaar");

            if (gebiedsdata.PrijsveranderingAfgelopen10JaarOption.IsSet)
                if (gebiedsdata.PrijsveranderingAfgelopen10JaarOption.Value != null)
                    writer.WriteNumber("prijsveranderingAfgelopen10Jaar", gebiedsdata.PrijsveranderingAfgelopen10JaarOption.Value!.Value);
                else
                    writer.WriteNull("prijsveranderingAfgelopen10Jaar");
        }
    }

    /// <summary>
    /// The GebiedsdataSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(Gebiedsdata))]
    public partial class GebiedsdataSerializationContext : JsonSerializerContext { }
}
