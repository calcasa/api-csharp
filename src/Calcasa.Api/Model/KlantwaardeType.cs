// <auto-generated>
/*
 * Copyright 2025 Calcasa B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Calcasa Public API
 *
 * The Calcasa API is used to connect to Calcasa provided services. For more information, please visit [Documentation](https://docs.calcasa.nl) or [GitHub](https://github.com/calcasa/api).
 *
 * The version of the OpenAPI document: 1.4.0-rc3
 * Contact: info@calcasa.nl
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Text.Json.Serialization.Metadata;
using System.Text.RegularExpressions;
using Calcasa.Api.Client;

namespace Calcasa.Api.Model
{
    /// <summary>
    /// | Waarde | Omschrijving | | - -- | - -- | | &#x60;onbekend&#x60; |  | | &#x60;koopsom&#x60; |  | | &#x60;taxatiewaarde&#x60; |  | | &#x60;wozWaarde&#x60; |  | | &#x60;eigenWaardeinschatting&#x60; |  |
    /// </summary>
    /// <value>| Waarde | Omschrijving | | - -- | - -- | | &#x60;onbekend&#x60; |  | | &#x60;koopsom&#x60; |  | | &#x60;taxatiewaarde&#x60; |  | | &#x60;wozWaarde&#x60; |  | | &#x60;eigenWaardeinschatting&#x60; |  |</value>
    public enum KlantwaardeType
    {
        /// <summary>
        /// Enum Onbekend for value: onbekend
        /// </summary>
        Onbekend,

        /// <summary>
        /// Enum Koopsom for value: koopsom
        /// </summary>
        Koopsom,

        /// <summary>
        /// Enum Taxatiewaarde for value: taxatiewaarde
        /// </summary>
        Taxatiewaarde,

        /// <summary>
        /// Enum WozWaarde for value: wozWaarde
        /// </summary>
        WozWaarde,

        /// <summary>
        /// Enum EigenWaardeinschatting for value: eigenWaardeinschatting
        /// </summary>
        EigenWaardeinschatting
    }

    /// <summary>
    /// Converts <see cref="KlantwaardeType"/> to and from the JSON value
    /// </summary>
    public static class KlantwaardeTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="KlantwaardeType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static KlantwaardeType FromString(string value)
        {
            if (value.Equals("onbekend"))
                return KlantwaardeType.Onbekend;

            if (value.Equals("koopsom"))
                return KlantwaardeType.Koopsom;

            if (value.Equals("taxatiewaarde"))
                return KlantwaardeType.Taxatiewaarde;

            if (value.Equals("wozWaarde"))
                return KlantwaardeType.WozWaarde;

            if (value.Equals("eigenWaardeinschatting"))
                return KlantwaardeType.EigenWaardeinschatting;

            throw new NotImplementedException($"Could not convert value to type KlantwaardeType: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="KlantwaardeType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static KlantwaardeType? FromStringOrDefault(string value)
        {
            if (value.Equals("onbekend"))
                return KlantwaardeType.Onbekend;

            if (value.Equals("koopsom"))
                return KlantwaardeType.Koopsom;

            if (value.Equals("taxatiewaarde"))
                return KlantwaardeType.Taxatiewaarde;

            if (value.Equals("wozWaarde"))
                return KlantwaardeType.WozWaarde;

            if (value.Equals("eigenWaardeinschatting"))
                return KlantwaardeType.EigenWaardeinschatting;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="KlantwaardeType"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static string ToJsonValue(KlantwaardeType value)
        {
            if (value == KlantwaardeType.Onbekend)
                return "onbekend";

            if (value == KlantwaardeType.Koopsom)
                return "koopsom";

            if (value == KlantwaardeType.Taxatiewaarde)
                return "taxatiewaarde";

            if (value == KlantwaardeType.WozWaarde)
                return "wozWaarde";

            if (value == KlantwaardeType.EigenWaardeinschatting)
                return "eigenWaardeinschatting";

            throw new NotImplementedException($"Value could not be handled: '{value}'");
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="KlantwaardeType"/>
    /// </summary>
    /// <exception cref="NotImplementedException"></exception>
    public class KlantwaardeTypeJsonConverter : JsonConverter<KlantwaardeType>
    {
        /// <summary>
        /// Returns a  from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override KlantwaardeType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            KlantwaardeType? result = rawValue == null
                ? null
                : KlantwaardeTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the KlantwaardeType to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="klantwaardeType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, KlantwaardeType klantwaardeType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(KlantwaardeTypeValueConverter.ToJsonValue(klantwaardeType).ToString());
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="KlantwaardeType"/>
    /// </summary>
    public class KlantwaardeTypeNullableJsonConverter : JsonConverter<KlantwaardeType?>
    {
        /// <summary>
        /// Returns a KlantwaardeType from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override KlantwaardeType? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            KlantwaardeType? result = rawValue == null
                ? null
                : KlantwaardeTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the KlantwaardeType to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="klantwaardeType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, KlantwaardeType? klantwaardeType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(klantwaardeType.HasValue ? KlantwaardeTypeValueConverter.ToJsonValue(klantwaardeType.Value).ToString() : "null");
        }
    }


    /// <summary>
    /// The KlantwaardeTypeSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(KlantwaardeType))]
    public partial class KlantwaardeTypeSerializationContext : JsonSerializerContext { }
}
