/*
 * Copyright 2025 Calcasa B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Calcasa Public API
 *
 * The Calcasa API is used to connect to Calcasa provided services. For more information, please visit [Documentation](https://docs.calcasa.nl) or [GitHub](https://github.com/calcasa/api).
 *
 * The version of the OpenAPI document: 1.4.0-rc3
 * Contact: info@calcasa.nl
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Text.Json;
using System.Text.Json.Serialization;
using Calcasa.Api.Api;
using Calcasa.Api.Model;
using Microsoft.Extensions.DependencyInjection;

namespace Calcasa.Api.Client
{
    /// <summary>
    /// Provides hosting configuration for Calcasa.Api
    /// </summary>
    public class HostConfiguration
    {
        private readonly IServiceCollection _services;
        private readonly JsonSerializerOptions _jsonOptions = new JsonSerializerOptions();

        internal bool HttpClientsAdded { get; private set; }

        /// <summary>
        /// Instantiates the class 
        /// </summary>
        /// <param name="services"></param>
        public HostConfiguration(IServiceCollection services)
        {
            _services = services;
            _jsonOptions.Converters.Add(new JsonStringEnumConverter());
            _jsonOptions.Converters.Add(new DateTimeJsonConverter());
            _jsonOptions.Converters.Add(new DateTimeNullableJsonConverter());
            _jsonOptions.Converters.Add(new DateOnlyJsonConverter());
            _jsonOptions.Converters.Add(new DateOnlyNullableJsonConverter());
            _jsonOptions.Converters.Add(new AanvraagdoelJsonConverter());
            _jsonOptions.Converters.Add(new AanvraagdoelNullableJsonConverter());
            _jsonOptions.Converters.Add(new AdresJsonConverter());
            _jsonOptions.Converters.Add(new AdresInfoJsonConverter());
            _jsonOptions.Converters.Add(new BestemmingsdataJsonConverter());
            _jsonOptions.Converters.Add(new BodemStatusTypeJsonConverter());
            _jsonOptions.Converters.Add(new BodemStatusTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new BodemdataJsonConverter());
            _jsonOptions.Converters.Add(new BusinessRulesCodeJsonConverter());
            _jsonOptions.Converters.Add(new BusinessRulesCodeNullableJsonConverter());
            _jsonOptions.Converters.Add(new BusinessRulesProblemDetailsJsonConverter());
            _jsonOptions.Converters.Add(new CallbackJsonConverter());
            _jsonOptions.Converters.Add(new CallbackInschrijvingJsonConverter());
            _jsonOptions.Converters.Add(new CbsIndelingJsonConverter());
            _jsonOptions.Converters.Add(new DeelWaarderingWebhookPayloadJsonConverter());
            _jsonOptions.Converters.Add(new EnergielabelJsonConverter());
            _jsonOptions.Converters.Add(new EnergielabelNullableJsonConverter());
            _jsonOptions.Converters.Add(new EnergielabelDataJsonConverter());
            _jsonOptions.Converters.Add(new FactuurJsonConverter());
            _jsonOptions.Converters.Add(new FotoJsonConverter());
            _jsonOptions.Converters.Add(new FunderingDataBronJsonConverter());
            _jsonOptions.Converters.Add(new FunderingDataBronNullableJsonConverter());
            _jsonOptions.Converters.Add(new FunderingHerstelTypeJsonConverter());
            _jsonOptions.Converters.Add(new FunderingHerstelTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new FunderingRisicoJsonConverter());
            _jsonOptions.Converters.Add(new FunderingRisicoLabelJsonConverter());
            _jsonOptions.Converters.Add(new FunderingRisicoLabelNullableJsonConverter());
            _jsonOptions.Converters.Add(new FunderingSoortBronJsonConverter());
            _jsonOptions.Converters.Add(new FunderingSoortBronNullableJsonConverter());
            _jsonOptions.Converters.Add(new FunderingTypeJsonConverter());
            _jsonOptions.Converters.Add(new FunderingTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new FunderingTyperingJsonConverter());
            _jsonOptions.Converters.Add(new FunderingdataJsonConverter());
            _jsonOptions.Converters.Add(new GebiedsdataJsonConverter());
            _jsonOptions.Converters.Add(new GeldverstrekkerJsonConverter());
            _jsonOptions.Converters.Add(new InvalidArgumentProblemDetailsJsonConverter());
            _jsonOptions.Converters.Add(new KlantwaardeTypeJsonConverter());
            _jsonOptions.Converters.Add(new KlantwaardeTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new KwartaalJsonConverter());
            _jsonOptions.Converters.Add(new ModeldataJsonConverter());
            _jsonOptions.Converters.Add(new NotFoundProblemDetailsJsonConverter());
            _jsonOptions.Converters.Add(new NotitieJsonConverter());
            _jsonOptions.Converters.Add(new NotitieNullableJsonConverter());
            _jsonOptions.Converters.Add(new NotitiesJsonConverter());
            _jsonOptions.Converters.Add(new ObjectdataJsonConverter());
            _jsonOptions.Converters.Add(new OmgevingsdataJsonConverter());
            _jsonOptions.Converters.Add(new PermissionsDeniedProblemDetailsJsonConverter());
            _jsonOptions.Converters.Add(new ProductTypeJsonConverter());
            _jsonOptions.Converters.Add(new ProductTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new RapportJsonConverter());
            _jsonOptions.Converters.Add(new ReferentieobjectJsonConverter());
            _jsonOptions.Converters.Add(new ResourceExhaustedProblemDetailsJsonConverter());
            _jsonOptions.Converters.Add(new TaxatiedataJsonConverter());
            _jsonOptions.Converters.Add(new TaxatiestatusJsonConverter());
            _jsonOptions.Converters.Add(new TaxatiestatusNullableJsonConverter());
            _jsonOptions.Converters.Add(new UnauthorizedProblemDetailsJsonConverter());
            _jsonOptions.Converters.Add(new VerkoopBijzonderhedenJsonConverter());
            _jsonOptions.Converters.Add(new VerkoopBijzonderhedenNullableJsonConverter());
            _jsonOptions.Converters.Add(new VersionNamesJsonConverter());
            _jsonOptions.Converters.Add(new VersionNamesNullableJsonConverter());
            _jsonOptions.Converters.Add(new VorigeVerkoopJsonConverter());
            _jsonOptions.Converters.Add(new WaarderingJsonConverter());
            _jsonOptions.Converters.Add(new WaarderingInputParametersJsonConverter());
            _jsonOptions.Converters.Add(new WaarderingOntwikkelingJsonConverter());
            _jsonOptions.Converters.Add(new WaarderingOntwikkelingKwartaalJsonConverter());
            _jsonOptions.Converters.Add(new WaarderingStatusJsonConverter());
            _jsonOptions.Converters.Add(new WaarderingStatusNullableJsonConverter());
            _jsonOptions.Converters.Add(new WaarderingWebhookPayloadJsonConverter());
            _jsonOptions.Converters.Add(new WaarderingZoekParametersJsonConverter());
            _jsonOptions.Converters.Add(new WebhookPayloadJsonConverter());
            _jsonOptions.Converters.Add(new WoningTypeJsonConverter());
            _jsonOptions.Converters.Add(new WoningTypeNullableJsonConverter());
            JsonSerializerOptionsProvider jsonSerializerOptionsProvider = new(_jsonOptions);
            _services.AddSingleton(jsonSerializerOptionsProvider);

            _jsonOptions.TypeInfoResolver = System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver.Combine(
                new AanvraagdoelSerializationContext(),
                new AdresSerializationContext(),
                new AdresInfoSerializationContext(),
                new BestemmingsdataSerializationContext(),
                new BodemStatusTypeSerializationContext(),
                new BodemdataSerializationContext(),
                new BusinessRulesCodeSerializationContext(),
                new BusinessRulesProblemDetailsSerializationContext(),
                new CallbackSerializationContext(),
                new CallbackInschrijvingSerializationContext(),
                new CbsIndelingSerializationContext(),
                new DeelWaarderingWebhookPayloadSerializationContext(),
                new EnergielabelSerializationContext(),
                new EnergielabelDataSerializationContext(),
                new FactuurSerializationContext(),
                new FotoSerializationContext(),
                new FunderingDataBronSerializationContext(),
                new FunderingHerstelTypeSerializationContext(),
                new FunderingRisicoSerializationContext(),
                new FunderingRisicoLabelSerializationContext(),
                new FunderingSoortBronSerializationContext(),
                new FunderingTypeSerializationContext(),
                new FunderingTyperingSerializationContext(),
                new FunderingdataSerializationContext(),
                new GebiedsdataSerializationContext(),
                new GeldverstrekkerSerializationContext(),
                new InvalidArgumentProblemDetailsSerializationContext(),
                new KlantwaardeTypeSerializationContext(),
                new KwartaalSerializationContext(),
                new ModeldataSerializationContext(),
                new NotFoundProblemDetailsSerializationContext(),
                new NotitieSerializationContext(),
                new NotitiesSerializationContext(),
                new ObjectdataSerializationContext(),
                new OmgevingsdataSerializationContext(),
                new PermissionsDeniedProblemDetailsSerializationContext(),
                new ProductTypeSerializationContext(),
                new RapportSerializationContext(),
                new ReferentieobjectSerializationContext(),
                new ResourceExhaustedProblemDetailsSerializationContext(),
                new TaxatiedataSerializationContext(),
                new TaxatiestatusSerializationContext(),
                new UnauthorizedProblemDetailsSerializationContext(),
                new VerkoopBijzonderhedenSerializationContext(),
                new VersionNamesSerializationContext(),
                new VorigeVerkoopSerializationContext(),
                new WaarderingSerializationContext(),
                new WaarderingInputParametersSerializationContext(),
                new WaarderingOntwikkelingSerializationContext(),
                new WaarderingOntwikkelingKwartaalSerializationContext(),
                new WaarderingStatusSerializationContext(),
                new WaarderingWebhookPayloadSerializationContext(),
                new WaarderingZoekParametersSerializationContext(),
                new WebhookPayloadSerializationContext(),
                new WoningTypeSerializationContext(),
                new System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver()
            );

            _services.AddSingleton<IApiFactory, ApiFactory>();
            _services.AddSingleton<AdressenApiEvents>();
            _services.AddSingleton<BestemmingsplannenApiEvents>();
            _services.AddSingleton<BodemApiEvents>();
            _services.AddSingleton<BuurtApiEvents>();
            _services.AddSingleton<CallbacksApiEvents>();
            _services.AddSingleton<ConfiguratieApiEvents>();
            _services.AddSingleton<FacturenApiEvents>();
            _services.AddSingleton<FotosApiEvents>();
            _services.AddSingleton<FunderingenApiEvents>();
            _services.AddSingleton<GeldverstrekkersApiEvents>();
            _services.AddSingleton<RapportenApiEvents>();
            _services.AddSingleton<WaarderingenApiEvents>();
        }

        /// <summary>
        /// Configures the HttpClients.
        /// </summary>
        /// <param name="client"></param>
        /// <param name="builder"></param>
        /// <returns></returns>
        public HostConfiguration AddApiHttpClients
        (
            Action<HttpClient>? client = null, Action<IHttpClientBuilder>? builder = null)
        {
            if (client == null)
                client = c => c.BaseAddress = new Uri(ClientUtils.BASE_ADDRESS);

            List<IHttpClientBuilder> builders = new List<IHttpClientBuilder>();

            builders.Add(_services.AddHttpClient<IAdressenApi, AdressenApi>(client));
            builders.Add(_services.AddHttpClient<IBestemmingsplannenApi, BestemmingsplannenApi>(client));
            builders.Add(_services.AddHttpClient<IBodemApi, BodemApi>(client));
            builders.Add(_services.AddHttpClient<IBuurtApi, BuurtApi>(client));
            builders.Add(_services.AddHttpClient<ICallbacksApi, CallbacksApi>(client));
            builders.Add(_services.AddHttpClient<IConfiguratieApi, ConfiguratieApi>(client));
            builders.Add(_services.AddHttpClient<IFacturenApi, FacturenApi>(client));
            builders.Add(_services.AddHttpClient<IFotosApi, FotosApi>(client));
            builders.Add(_services.AddHttpClient<IFunderingenApi, FunderingenApi>(client));
            builders.Add(_services.AddHttpClient<IGeldverstrekkersApi, GeldverstrekkersApi>(client));
            builders.Add(_services.AddHttpClient<IRapportenApi, RapportenApi>(client));
            builders.Add(_services.AddHttpClient<IWaarderingenApi, WaarderingenApi>(client));

            if (builder != null)
                foreach (IHttpClientBuilder instance in builders)
                    builder(instance);

            HttpClientsAdded = true;

            return this;
        }

        /// <summary>
        /// Configures the JsonSerializerSettings
        /// </summary>
        /// <param name="options"></param>
        /// <returns></returns>
        public HostConfiguration ConfigureJsonOptions(Action<JsonSerializerOptions> options)
        {
            options(_jsonOptions);

            return this;
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="token"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(TTokenBase token) where TTokenBase : TokenBase
        {
            return AddTokens(new TTokenBase[] { token });
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="tokens"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(IEnumerable<TTokenBase> tokens) where TTokenBase : TokenBase
        {
            TokenContainer<TTokenBase> container = new TokenContainer<TTokenBase>(tokens);
            _services.AddSingleton(services => container);

            return this;
        }

        /// <summary>
        /// Adds a token provider to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenProvider"></typeparam>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <returns></returns>
        public HostConfiguration UseProvider<TTokenProvider, TTokenBase>()
            where TTokenProvider : TokenProvider<TTokenBase>
            where TTokenBase : TokenBase
        {
            _services.AddSingleton<TTokenProvider>();
            _services.AddSingleton<TokenProvider<TTokenBase>>(services => services.GetRequiredService<TTokenProvider>());

            return this;
        }
    }
}
